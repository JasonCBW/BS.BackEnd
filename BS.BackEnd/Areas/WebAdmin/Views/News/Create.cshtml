@model Entity.Base.News

@{
    ViewBag.Title = "Create";
    Layout = "~/Areas/WebAdmin/Views/Shared/_Layout.cshtml";
}

<section class="panel">
    <header class="panel-heading">
        @Html.ActionLink("返回列表", "Index", "News", new { }, new { @class = "label label-primary" })
    </header>
    <div class="panel-body">
        @using (Html.BeginForm("Create", "News", FormMethod.Post, new { @id = "form" }))
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                <div class="form-group">
                    @Html.Label("标题", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                    </div>
                </div>

                <div class="form-group">
                    @Html.Label("所属分类", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-2">
                        @Html.DropDownList("NewsClassID", null, htmlAttributes: new { @class = "form-control m-bot15" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.Label("推荐", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.CheckBoxFor(model => model.IsElite, new { @class = "checkbox form-control w-20" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.Label("点击数", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-2">
                        @Html.EditorFor(model => model.Hits, new { htmlAttributes = new { @class = "form-control", @Value = "1" } })
                    </div>
                </div>

                <div class="form-group">
                    @Html.Label("状态", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.CheckBoxFor(model => model.Status, new { @class = "checkbox form-control w-20" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.Label("排序", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-2">
                        @Html.EditorFor(model => model.Sort, new { htmlAttributes = new { @class = "form-control", @Value = "1" } })
                    </div>
                </div>

                <div class="form-group">
                    @Html.Label("作者", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Author, new { htmlAttributes = new { @class = "form-control" } })
                    </div>
                </div>

                <div class="form-group">
                    @Html.Label("来源", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Source, new { htmlAttributes = new { @class = "form-control" } })
                    </div>
                </div>

                <div class="form-group">
                    @Html.Label("内容", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextAreaFor(model => model.Content, 8, 1, htmlAttributes: new { @class = "form-control" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.Label("图片上传", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        <input id="ImageUrlList" type="file" class="file-loading" multiple />
                        @Html.HiddenFor(model => model.BigImageUrlList)
                    </div>
                </div>

                <div class="form-group">
                    @Html.Label("SEO标题", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.SeoTitle, new { htmlAttributes = new { @class = "form-control" } })
                    </div>
                </div>

                <div class="form-group">
                    @Html.Label("SEO关键词", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.SeoKeyWords, new { htmlAttributes = new { @class = "form-control" } })
                    </div>
                </div>

                <div class="form-group">
                    @Html.Label("SEO描述", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextAreaFor(model => model.SeoDescription, 8, 1, htmlAttributes: new { @class = "form-control" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.Label("备注", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextAreaFor(model => model.Remark, 8, 1, htmlAttributes: new { @class = "form-control" })
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" class="btn btn-primary" value="保存" />
                        @Html.ActionLink("取消", "Index", "News", null, new { @class = "btn btn-default" })
                    </div>
                </div>
            </div>
        }
    </div>
</section>
@section scripts {
    <script src="~/Areas/WebAdmin/Content/assets/bootstrap-validator/bootstrapValidator.min.js" type="text/javascript"></script>
    <link href="~/Areas/WebAdmin/Content/assets/bootstrap-fileupload/fileinput.css" rel="stylesheet" />
    <script src="~/Areas/WebAdmin/Content/assets/bootstrap-fileupload/fileinput.js"></script>
    <script src="~/Areas/WebAdmin/Content/assets/bootstrap-fileupload/zh.js"></script>
    <script src="~/Areas/WebAdmin/Scripts/bootbox.min.js"></script>
    <script src="~/Areas/WebAdmin/Scripts/summernote/summernote.js"></script>
    <script src="~/Areas/WebAdmin/Scripts/summernote/summernote-zh-CN.js"></script>
    <link href="~/Areas/WebAdmin/Scripts/summernote/summernote.css" rel="stylesheet" />
    <script type="text/javascript">

        // 初始化获取原有文件
        $(function () {
            $.ajax({
                type: "get",
                url: "/api/NewsApi/GetByID?id=" + 10,
                dataType: "json",
                success: function (data) {
                    showPhotos(data);
                }
            });

        });

        function showPhotos(djson) {
            //后台返回json字符串转换为json对象
            var reData = djson.BigImageUrlList.split(',');
            // 预览图片json数据组
            var preList = new Array();
            for (var i = 0; i < reData.length; i++) {
                // 图片类型
                preList[i] = '<img src="' + reData[i] + '" class="file-preview-image" style="width:auto;height:160px;">';

            }
            var previewJson = preList;
            alert(previewJson);
            // 与上面 预览图片json数据组 对应的config数据
            var preConfigList = new Array();
            for (var i = 0; i < reData.length; i++) {
                var array_element = reData[i];
                var tjson = {
                    caption: "fuck" + i, // 展示的文件名
                    width: '160px'
                };
                preConfigList[i] = tjson;
            }
            alert(preConfigList);
            // 具体参数自行查询
            $('#ImageUrlList').fileinput({
                language: 'zh',
                uploadUrl: '/WebAdmin/News/ImgUpload',
                uploadAsync: false,//同步上传，一次传多个文件，为true时，为多个文件多次请求上传
                showUpload: true,//是否显示上传按钮
                showCaption: false,//是否显示输入框
                dropZoneEnabled: false,
                maxFileCount: 10,
                msgFilesTooMany: "选择上传的文件数量超过允许的最大数值！",
                previewFileIcon: '<i class="fa fa-file"></i>',
                allowedPreviewTypes: ['image'],
                allowedFileExtensions: ['jpg', 'png', 'jpeg', 'bmp', 'gif'],
                maxFileSize: 10240,
                initialPreview: [
       "<img src='http://img.xmiles.cn/slotmachine/20151014/10coupon-v2.png' class='file-preview-image' />",
       "<img src='http://img.xmiles.cn/slotmachine/20151014/5coupon-v2.png' class='file-preview-image' />",
                ],
                initialPreviewConfig: preConfigList
            }).off('filepreupload').on('filepreupload', function () {
                //                                  alert(data.url);
            }).on("filebatchuploadsuccess", function (event, data, previewId, index) {
                //文件上传成功后返回的数据， 此处我只保存返回文件的id
            });
        }


        $('form').bootstrapValidator({
            fields: {
                Title: {
                    validators: {
                        notEmpty: {
                            message: '标题不能为空'
                        }
                    }
                }
            }
        });

        $('#Content').summernote({
            height: 200,                 // set editor height
            lang: "zh-CN",
            toolbar: [
                ['Paragraph style', ['style', 'ol', 'ul', 'paragraph', 'height']],
                ['Font Style', ['fontname', 'fontsize', 'color', 'bold', 'italic', 'underline', 'strikethrough', 'superscript', 'subscript', 'clear']],
                ['Insert', ['picture', 'link', 'video', 'table', 'hr']],
                ['Misc', ['undo', 'redo', 'codeview']]
            ],
            shortcuts: false
        });


        //$("#ImageUrlList").fileinput({
        //    language: 'zh',
        //    uploadUrl: '/WebAdmin/News/ImgUpload',
        //    uploadAsync: false,//同步上传，一次传多个文件，为true时，为多个文件多次请求上传
        //    showUpload: true,//是否显示上传按钮
        //    showCaption: false,//是否显示输入框
        //    dropZoneEnabled: false,
        //    maxFileCount: 10,
        //    msgFilesTooMany: "选择上传的文件数量超过允许的最大数值！",
        //    previewFileIcon: '<i class="fa fa-file"></i>',
        //    allowedPreviewTypes: ['image'],
        //    allowedFileExtensions: ['jpg', 'png', 'jpeg', 'bmp', 'gif'],
        //    maxFileSize: 10240
        //}).on("filebatchselected", function (event, files) {
        //    //为自动上传时取消注释
        //    //$(this).fileinput("upload");
        //}).on("filebatchuploadsuccess", function (event, data, previewId, index) {
        //    //uploadAsync为true时，才是fileuploaded的响应结果，为false时，才是filebatchuploadsuccess的响应结果
        //    $("#BigImageUrlList").val(data.response);
        //});


        //提交成功后弹出对话框
        function ShowTips(data) {
            alert(data);
            bootbox.alert({
                message: data,
                size: 'small',
                backdrop: true,
                callback: function () {
                    window.location.href = "/WebAdmin/News/";
                }
            })
        }


    </script>
}